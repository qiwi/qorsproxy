# This is a Github Workflow that runs tests on any push or pull request.
# If the tests pass and this is a push to the master branch it also runs Semantic Release.
name: CI
on: [push, pull_request]
jobs:
  test_push:
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: yarn
      - name: Unit test only
        run: yarn test:unit

      - name: Update coverage
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: artifact-${{ github.run_id }}
          retention-days: 1
          path: |
            coverage
            .nyc_output

  test_pr:
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
        node-version: [ 14, 18, 20 ]
    name: Test (Node v${{ matrix.node-version }}, OS ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: yarn
      - name: Unit test only
        if: matrix.node-version != '20' || matrix.os != 'ubuntu-22.04'
        run: yarn test:unit

      - name: Full test suite
        if: matrix.node-version == '20' && matrix.os == 'ubuntu-22.04'
        run: yarn test

  release:
    name: Release
    # https://github.community/t/trigger-job-on-tag-push-only/18076
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [test_push]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master

      - name: Restore artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-${{ github.run_id }}

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Codeclimate
        uses: paambaati/codeclimate-action@v4.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage/lcov.info:lcov

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_USER: ${{ secrets.GH_USER }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
        run: |
          yarn docs
          npm_config_yes=true npx zx-semrel
